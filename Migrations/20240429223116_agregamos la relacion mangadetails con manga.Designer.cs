// <auto-generated />
using Api_Tienda.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api_Tienda.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240429223116_agregamos la relacion mangadetails con manga")]
    partial class agregamoslarelacionmangadetailsconmanga
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Api_Tienda.Models.autor", b =>
                {
                    b.Property<int>("idAutor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idAutor"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idAutor");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("Api_Tienda.Models.editorial", b =>
                {
                    b.Property<int>("idEditorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idEditorial"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idEditorial");

                    b.ToTable("Editoriales");
                });

            modelBuilder.Entity("Api_Tienda.Models.manga", b =>
                {
                    b.Property<int>("idManga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idManga"));

                    b.Property<int>("cantidadTomos")
                        .HasColumnType("int");

                    b.Property<int>("idAutor")
                        .HasColumnType("int");

                    b.Property<int>("idEditorial")
                        .HasColumnType("int");

                    b.Property<int>("precio")
                        .HasColumnType("int");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idManga");

                    b.HasIndex("idAutor");

                    b.HasIndex("idEditorial");

                    b.ToTable("Mangas");
                });

            modelBuilder.Entity("Api_Tienda.Models.mangaDetails", b =>
                {
                    b.Property<int>("idMDetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idMDetail"));

                    b.Property<int>("idManga")
                        .HasColumnType("int");

                    b.Property<string>("reseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tomoNro")
                        .HasColumnType("int");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idMDetail");

                    b.HasIndex("idManga");

                    b.ToTable("MangaDetails");
                });

            modelBuilder.Entity("Api_Tienda.Models.manga", b =>
                {
                    b.HasOne("Api_Tienda.Models.autor", "autor")
                        .WithMany("mangas")
                        .HasForeignKey("idAutor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_Tienda.Models.editorial", "editorial")
                        .WithMany("mangas")
                        .HasForeignKey("idEditorial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("autor");

                    b.Navigation("editorial");
                });

            modelBuilder.Entity("Api_Tienda.Models.mangaDetails", b =>
                {
                    b.HasOne("Api_Tienda.Models.manga", "mangaInfo")
                        .WithMany("mangasDetails")
                        .HasForeignKey("idManga")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("mangaInfo");
                });

            modelBuilder.Entity("Api_Tienda.Models.autor", b =>
                {
                    b.Navigation("mangas");
                });

            modelBuilder.Entity("Api_Tienda.Models.editorial", b =>
                {
                    b.Navigation("mangas");
                });

            modelBuilder.Entity("Api_Tienda.Models.manga", b =>
                {
                    b.Navigation("mangasDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
